<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CIUDAD', 'doctrine');

/**
 * BaseCIUDAD
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idpais
 * @property integer $idestado
 * @property integer $idciudad
 * @property string $nombreciudad
 * @property ESTADO $ESTADO
 * @property ESTADO $ESTADO_2
 * @property Doctrine_Collection $ACADEMICO
 * @property Doctrine_Collection $ACADEMICO_3
 * @property Doctrine_Collection $ACADEMICO_4
 * @property Doctrine_Collection $DIRECCION
 * @property Doctrine_Collection $DIRECCION_2
 * @property Doctrine_Collection $DIRECCION_3
 * 
 * @method integer             getIdpais()       Returns the current record's "idpais" value
 * @method integer             getIdestado()     Returns the current record's "idestado" value
 * @method integer             getIdciudad()     Returns the current record's "idciudad" value
 * @method string              getNombreciudad() Returns the current record's "nombreciudad" value
 * @method ESTADO              getESTADO()       Returns the current record's "ESTADO" value
 * @method ESTADO              getESTADO2()      Returns the current record's "ESTADO_2" value
 * @method Doctrine_Collection getACADEMICO()    Returns the current record's "ACADEMICO" collection
 * @method Doctrine_Collection getACADEMICO3()   Returns the current record's "ACADEMICO_3" collection
 * @method Doctrine_Collection getACADEMICO4()   Returns the current record's "ACADEMICO_4" collection
 * @method Doctrine_Collection getDIRECCION()    Returns the current record's "DIRECCION" collection
 * @method Doctrine_Collection getDIRECCION2()   Returns the current record's "DIRECCION_2" collection
 * @method Doctrine_Collection getDIRECCION3()   Returns the current record's "DIRECCION_3" collection
 * @method CIUDAD              setIdpais()       Sets the current record's "idpais" value
 * @method CIUDAD              setIdestado()     Sets the current record's "idestado" value
 * @method CIUDAD              setIdciudad()     Sets the current record's "idciudad" value
 * @method CIUDAD              setNombreciudad() Sets the current record's "nombreciudad" value
 * @method CIUDAD              setESTADO()       Sets the current record's "ESTADO" value
 * @method CIUDAD              setESTADO2()      Sets the current record's "ESTADO_2" value
 * @method CIUDAD              setACADEMICO()    Sets the current record's "ACADEMICO" collection
 * @method CIUDAD              setACADEMICO3()   Sets the current record's "ACADEMICO_3" collection
 * @method CIUDAD              setACADEMICO4()   Sets the current record's "ACADEMICO_4" collection
 * @method CIUDAD              setDIRECCION()    Sets the current record's "DIRECCION" collection
 * @method CIUDAD              setDIRECCION2()   Sets the current record's "DIRECCION_2" collection
 * @method CIUDAD              setDIRECCION3()   Sets the current record's "DIRECCION_3" collection
 * 
 * @package    SEA-UCA_v1.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCIUDAD extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('CIUDAD');
        $this->hasColumn('idpais', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('idestado', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('idciudad', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombreciudad', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ESTADO', array(
             'local' => 'idestado',
             'foreign' => 'idestado'));

        $this->hasOne('ESTADO as ESTADO_2', array(
             'local' => 'idpais',
             'foreign' => 'idpais'));

        $this->hasMany('ACADEMICO', array(
             'local' => 'idciudad',
             'foreign' => 'idciudadnac'));

        $this->hasMany('ACADEMICO as ACADEMICO_3', array(
             'local' => 'idestado',
             'foreign' => 'idestadonac'));

        $this->hasMany('ACADEMICO as ACADEMICO_4', array(
             'local' => 'idpais',
             'foreign' => 'idpaisnac'));

        $this->hasMany('DIRECCION', array(
             'local' => 'idciudad',
             'foreign' => 'idciudaddir'));

        $this->hasMany('DIRECCION as DIRECCION_2', array(
             'local' => 'idestado',
             'foreign' => 'idestadodir'));

        $this->hasMany('DIRECCION as DIRECCION_3', array(
             'local' => 'idpais',
             'foreign' => 'idpaisdir'));
    }
}